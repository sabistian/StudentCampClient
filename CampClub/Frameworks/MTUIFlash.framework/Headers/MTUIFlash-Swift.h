// Generated by Apple Swift version 4.2.1 (swiftlang-1000.11.42 clang-1000.11.45.1)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import QuartzCore;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="MTUIFlash",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif







@class NSCoder;

/// Dots loading
/// \code
///     let dotColors = [UIColor.red, UIColor.blue, UIColor.green, UIColor.yellow]
///     let loadingView = DotsLoadingView(colors: dotColors)
///     self.view.addSubview(loadingView)
///
/// \endcode
SWIFT_CLASS("_TtC9MTUIFlash15DotsLoadingView")
@interface DotsLoadingView : UIView
/// init
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UIColor;

/// 加减控件 Stepper
SWIFT_CLASS("_TtC9MTUIFlash9GMStepper")
@interface GMStepper : UIControl
/// Current value of the stepper. Defaults to 0.
@property (nonatomic) double value;
/// Minimum value. Must be less than maximumValue. Defaults to 0.
@property (nonatomic) double minimumValue;
/// Maximum value. Must be more than minimumValue. Defaults to 100.
@property (nonatomic) double maximumValue;
/// Step/Increment value as in UIStepper. Defaults to 1.
@property (nonatomic) double stepValue;
/// The same as UIStepper’s autorepeat. If true, holding on the buttons or keeping the pan gesture alters the value repeatedly. Defaults to true.
@property (nonatomic) BOOL autorepeat;
/// If the value is integer, it is shown without floating point.
@property (nonatomic) BOOL showIntegerIfDoubleIsInteger;
/// Text on the left button. Be sure that it fits in the button. Defaults to “−”.
@property (nonatomic, copy) NSString * _Nonnull leftButtonText;
/// Text on the right button. Be sure that it fits in the button. Defaults to “+”.
@property (nonatomic, copy) NSString * _Nonnull rightButtonText;
/// Text color of the buttons. Defaults to white.
@property (nonatomic, strong) UIColor * _Nonnull buttonsTextColor;
/// Background color of the buttons. Defaults to dark blue.
@property (nonatomic, strong) UIColor * _Nonnull buttonsBackgroundColor;
/// Text color of the middle label. Defaults to white.
@property (nonatomic, strong) UIColor * _Nonnull labelTextColor;
/// Text color of the middle label. Defaults to lighter blue.
@property (nonatomic, strong) UIColor * _Nonnull labelBackgroundColor;
/// Corner radius of the stepper’s layer. Defaults to 4.0.
@property (nonatomic) CGFloat stepCornerRadius;
/// Border width of the stepper and middle label’s layer. Defaults to 0.0.
@property (nonatomic) CGFloat stepBorderWidth;
/// Color of the border of the stepper and middle label’s layer. Defaults to clear color.
@property (nonatomic, strong) UIColor * _Nonnull stepBorderColor;
/// Percentage of the middle label’s width. Must be between 0 and 1. Defaults to 0.5. Be sure that it is wide enough to show the value.
@property (nonatomic) CGFloat labelWidthWeight;
/// Color of the flashing animation on the buttons in case the value hit the limit.
@property (nonatomic, strong) UIColor * _Nonnull limitHitAnimationColor;
/// init
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// init with frame
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end









@class NSAttributedString;

/// 自定义的占位符标签，在开始和结束编辑时都有动画。  An object of the class has a customized placeholder label which has animations on the beginning and ending editing.
SWIFT_CLASS("_TtC9MTUIFlash22MTPlaceholderTextField")
@interface MTPlaceholderTextField : UITextField
/// Minimum font size for the custom placeholder.
@property (nonatomic, readonly) CGFloat minimumPlaceholderFontSize;
/// Original (maximum) font size for the custom placeholder.
@property (nonatomic, readonly) CGFloat originalPlaceholderFontSize;
/// Placeholder animation duration.
@property (nonatomic, readonly) double placeholderDuration;
/// Color of custom placeholder.
@property (nonatomic, strong) UIColor * _Nullable placeholderColor;
/// The string that is displayed when there is no other text in the text field.
@property (nonatomic, copy) NSString * _Nullable tweePlaceholder;
@property (nonatomic, copy) NSString * _Nullable text;
@property (nonatomic, strong) NSAttributedString * _Nullable attributedText;
- (void)awakeFromNib;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// 永久显示底线。 An object of the class can show bottom line permanently.
SWIFT_CLASS("_TtC9MTUIFlash19MTBorderedTextField")
@interface MTBorderedTextField : MTPlaceholderTextField
/// Color of bottom line.
@property (nonatomic, strong) UIColor * _Nonnull lineColor;
/// Width of bottom line.
@property (nonatomic) CGFloat lineWidth;
- (void)awakeFromNib;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// 当用户开始编辑时，该类的对象可以显示动画底线。 An object of the class can show animated bottom line when a user begins editing.
SWIFT_CLASS("_TtC9MTUIFlash17MTActiveTextField")
@interface MTActiveTextField : MTBorderedTextField
/// Color of line that appears when a user begins editing.
@property (nonatomic, strong) UIColor * _Nonnull activeLineColor;
/// Width of line that appears when a user begins editing.
@property (nonatomic) CGFloat activeLineWidth;
/// Width of line that appears when a user begins editing.
@property (nonatomic, readonly) double animationDuration;
- (void)awakeFromNib;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// 对齐文本
SWIFT_CLASS("_TtC9MTUIFlash12MTAlignLabel")
@interface MTAlignLabel : UILabel
/// init
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// override textRect(forBounds: CGRect, limitedToNumberOfLines: Int) -> CGRect
- (CGRect)textRectForBounds:(CGRect)forBounds limitedToNumberOfLines:(NSInteger)limitedToNumberOfLines SWIFT_WARN_UNUSED_RESULT;
/// override drawText(in rect: CGRect)
- (void)drawTextInRect:(CGRect)rect;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// 可以在文本字段下显示自定义信息标签。 An object of the class can show the custom info label under text field.
/// \code
///  @IBAction private func emailBeginEditing(_ sender: MTAttributedTextField) {
///      emailTextField.hideInfo()
///  }
///
///  @IBAction private func emailEndEditing(_ sender: MTAttributedTextField) {
///      if let emailText = sender.text, emailText.isValidEmail == true {
///          return
///      }
///
///      sender.showInfo("Email address is incorrect. Check it out")
///  }
///
/// \endcode
SWIFT_CLASS("_TtC9MTUIFlash21MTAttributedTextField")
@interface MTAttributedTextField : MTActiveTextField
/// Animation duration for showing and hiding the info label.
@property (nonatomic, readonly) double infoAnimationDuration;
/// Color of info text.
@property (nonatomic, strong) UIColor * _Nonnull infoTextColor;
/// Font size of info text. If you want to change font use <code>infoLabel</code> property.
@property (nonatomic) CGFloat infoFontSize;
- (void)awakeFromNib;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// 导航按钮的标记提示
SWIFT_CLASS("_TtC9MTUIFlash16MTBadgeBarButton")
@interface MTBadgeBarButton : UIBarButtonItem
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// 标记按钮
SWIFT_CLASS("_TtC9MTUIFlash13MTBadgeButton")
@interface MTBadgeButton : UIButton
/// init with frame
/// \param frame frame
///
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/// init
/// \param aDecoder coder
///
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// 更新标示显示状态
- (void)updateBadgeStatus:(NSNotification * _Nullable)notification;
@end


@class UITouch;
@class UIEvent;

/// 圆角选择框
SWIFT_CLASS("_TtC9MTUIFlash18MTCircularCheckBox")
@interface MTCircularCheckBox : UIControl
/// init with frame
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/// init
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// end tracking
- (void)endTrackingWithTouch:(UITouch * _Nullable)touch withEvent:(UIEvent * _Nullable)event;
@end


/// 弹出POP菜单配置  see <code>MTPopOverMenu</code>
SWIFT_CLASS("_TtC9MTUIFlash15MTConfiguration")
@interface MTConfiguration : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9MTUIFlash23MTDecimalKeyboardButton")
@interface MTDecimalKeyboardButton : UIButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9MTUIFlash32MTDecimalKeyboardBackspaceButton")
@interface MTDecimalKeyboardBackspaceButton : MTDecimalKeyboardButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC9MTUIFlash27MTDecimalKeyboardTextButton")
@interface MTDecimalKeyboardTextButton : MTDecimalKeyboardButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9MTUIFlash26MTDecimalKeyboardDotButton")
@interface MTDecimalKeyboardDotButton : MTDecimalKeyboardTextButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9MTUIFlash28MTDecimalKeyboardEightButton")
@interface MTDecimalKeyboardEightButton : MTDecimalKeyboardTextButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9MTUIFlash27MTDecimalKeyboardFiveButton")
@interface MTDecimalKeyboardFiveButton : MTDecimalKeyboardTextButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9MTUIFlash27MTDecimalKeyboardFourButton")
@interface MTDecimalKeyboardFourButton : MTDecimalKeyboardTextButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9MTUIFlash33MTDecimalKeyboardHideButtonButton")
@interface MTDecimalKeyboardHideButtonButton : MTDecimalKeyboardButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9MTUIFlash27MTDecimalKeyboardNineButton")
@interface MTDecimalKeyboardNineButton : MTDecimalKeyboardTextButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9MTUIFlash26MTDecimalKeyboardOneButton")
@interface MTDecimalKeyboardOneButton : MTDecimalKeyboardTextButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9MTUIFlash35MTDecimalKeyboardReturnButtonButton")
@interface MTDecimalKeyboardReturnButtonButton : MTDecimalKeyboardButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9MTUIFlash28MTDecimalKeyboardSevenButton")
@interface MTDecimalKeyboardSevenButton : MTDecimalKeyboardTextButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9MTUIFlash26MTDecimalKeyboardSixButton")
@interface MTDecimalKeyboardSixButton : MTDecimalKeyboardTextButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC9MTUIFlash28MTDecimalKeyboardThreeButton")
@interface MTDecimalKeyboardThreeButton : MTDecimalKeyboardTextButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9MTUIFlash26MTDecimalKeyboardTwoButton")
@interface MTDecimalKeyboardTwoButton : MTDecimalKeyboardTextButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9MTUIFlash27MTDecimalKeyboardZeroButton")
@interface MTDecimalKeyboardZeroButton : MTDecimalKeyboardTextButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// A flat design switch alternative to UISwitch
/// Dribbble post : https://dribbble.com/shots/1631598-On-Off
/// \code
/// var flatSwitch = MTFlatSwitch(frame: CGRectMake(0, 0, 50, 50))
/// // To change its selected state:
/// flatSwitch.selected = true
/// flatSwitch.setSelected(true, animated: true)
///
/// //To listen to its state changes:
/// @IBAction func handleSwitchValueChange(sender: AnyObject) {
///     if let flatSwitch = sender as? MTFlatSwitch {
///         println(flatSwitch.selected)
///     }
/// }
///
/// \endcode
SWIFT_CLASS("_TtC9MTUIFlash12MTFlatSwitch")
@interface MTFlatSwitch : UIControl
/// Line width for the circle, trail and checkmark parts of the switch.
@property (nonatomic) CGFloat lineWidth;
/// Set to false if the selection should not be animated with touch up inside events.
@property (nonatomic) BOOL animatesOnTouch;
/// Stroke color for circle and checkmark.
/// Circle disappears and trail becomes visible when the switch is selected.
@property (nonatomic, strong) UIColor * _Nonnull strokeColor;
/// Stroke color for trail.
/// Trail disappears and circle becomes visible when the switch is deselected.
@property (nonatomic, strong) UIColor * _Nonnull trailStrokeColor;
/// Overrides isSelected from UIControl using internal state flag.
/// Default value is false.
@property (nonatomic, getter=isSelected) BOOL selected;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSublayersOfLayer:(CALayer * _Nonnull)layer;
@end


/// 渐变视图  IBDesignable
SWIFT_CLASS("_TtC9MTUIFlash14MTGradientView")
@interface MTGradientView : UIView
/// First color of gradient i.e. it appears on top when angleº set to 0.0.
@property (nonatomic, strong) UIColor * _Nonnull firstColor;
/// Second color of gradient i.e. it appears in bottom when angleº set to 0.0.
@property (nonatomic, strong) UIColor * _Nonnull secondColor;
/// Angleº will describe the tilt of gradient.
@property (nonatomic) float angleº;
/// Color ratio will describe the proportion of colors. It’s value ranges from 0.0 to 1.0 default is 0.5.
@property (nonatomic) float colorRatio;
/// Fade intensity will describe the disperse of colors. It’s value ranges from 0.0 to 1.0 default is 0.0.
@property (nonatomic) float fadeIntensity;
/// Is blur allow to add visual effect on gradient view. Can’t be change during run-time.
@property (nonatomic) BOOL isBlur;
/// Blur opacity will describe the transparency of blur. It’s value ranges from 0.0 to 1.0 default is 0.0. It is suggested to set MTGradientView background color as clear color for better results.
@property (nonatomic) float blurOpacity;
/// init with frame
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
/// init
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// orverride draw
- (void)drawRect:(CGRect)rect;
@end


/// 加载框  超时60秒
/// \code
/// MTHub.show()
/// MTHub.hide()
///
/// \endcode
SWIFT_CLASS("_TtC9MTUIFlash5MTHub")
@interface MTHub : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSBundle;

/// 图片浏览器  //https://github.com/wxxsw/GSImageViewerController
SWIFT_CLASS("_TtC9MTUIFlash28MTImageBrowserViewController")
@interface MTImageBrowserViewController : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
/// viewWillLayoutSubviews
- (void)viewWillLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

@class UIGestureRecognizer;

@interface MTImageBrowserViewController (SWIFT_EXTENSION(MTUIFlash)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@end

@class UIScrollView;

@interface MTImageBrowserViewController (SWIFT_EXTENSION(MTUIFlash)) <UIScrollViewDelegate>
- (UIView * _Nullable)viewForZoomingInScrollView:(UIScrollView * _Nonnull)scrollView SWIFT_WARN_UNUSED_RESULT;
- (void)scrollViewDidZoom:(UIScrollView * _Nonnull)scrollView;
@end

@protocol UIViewControllerAnimatedTransitioning;

@interface MTImageBrowserViewController (SWIFT_EXTENSION(MTUIFlash)) <UIViewControllerTransitioningDelegate>
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForPresentedController:(UIViewController * _Nonnull)presented presentingController:(UIViewController * _Nonnull)presenting sourceController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)dismissed SWIFT_WARN_UNUSED_RESULT;
@end


/// 渐变进度条
SWIFT_CLASS("_TtC9MTUIFlash20MTLinearProgressView")
@interface MTLinearProgressView : UIView
@property (nonatomic, strong) UIColor * _Nonnull barColor;
/// First color of gradient i.e. it appears on top when angleº set to 0.0.
@property (nonatomic, strong) UIColor * _Nonnull firstColor;
/// Second color of gradient i.e. it appears in bottom when angleº set to 0.0.
@property (nonatomic, strong) UIColor * _Nonnull secondColor;
@property (nonatomic) BOOL isCornersRounded;
@property (nonatomic) float maximumValue;
@property (nonatomic) float minimumValue;
@property (nonatomic, readonly) float progress;
@property (nonatomic) CGFloat barInset;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end

@protocol UITextInput;

SWIFT_CLASS("_TtC9MTUIFlash30MTNumberKeyboardViewController")
@interface MTNumberKeyboardViewController : UIInputViewController
- (void)viewDidLoad;
- (void)updateViewConstraints;
- (void)textWillChange:(id <UITextInput> _Nullable)textInput;
- (void)textDidChange:(id <UITextInput> _Nullable)textInput;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end










@class NSTextContainer;

/// Placeholder TextView
SWIFT_CLASS("_TtC9MTUIFlash21MTPlaceholderTextView")
@interface MTPlaceholderTextView : UITextView
/// placeholder string
@property (nonatomic, copy) NSString * _Nonnull placeholder;
/// placeholder color
@property (nonatomic, strong) UIColor * _Nonnull placeholderColor;
/// placeholder attr
@property (nonatomic, strong) NSAttributedString * _Nullable attributedPlaceholder;
/// text align
@property (nonatomic) NSTextAlignment textAlignment;
/// textview text
@property (nonatomic, copy) NSString * _Null_unspecified text;
@property (nonatomic, strong) NSAttributedString * _Null_unspecified attributedText;
/// text container inset
@property (nonatomic) UIEdgeInsets textContainerInset;
/// override init
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer OBJC_DESIGNATED_INITIALIZER;
/// required init
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end


/// 弹出POP菜单
/// \code
///  MTPopOverMenu.showFromSenderFrame(senderFrame: sender.frame,
///     with: ["Share"],
///     menuImageArray: ["iconImageName"],
///     done: { (selectedIndex) -> () in
///
///     }) {
/// }
///
///  @IBAction func handleAddBarButtonItem(_ sender: UIBarButtonItem, event: UIEvent) {
///      MTPopOverMenu.showForEvent(event: event,  with: ["Share"],
///                                   menuImageArray: ["iconImageName"],
///                                   done: { (selectedIndex) -> () in
///       }) {
///         }
/// }
///
/// \endcode
SWIFT_CLASS("_TtC9MTUIFlash13MTPopOverMenu")
@interface MTPopOverMenu : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface MTPopOverMenu (SWIFT_EXTENSION(MTUIFlash)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
@end






/// 固定正则表达式的文本输入框
SWIFT_CLASS("_TtC9MTUIFlash16MTRegexTextField")
@interface MTRegexTextField : UITextField <UITextFieldDelegate>
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end


/// 短信发送按钮
SWIFT_CLASS("_TtC9MTUIFlash19MTSMSSendCodeButton")
@interface MTSMSSendCodeButton : UIButton
/// 倒计时秒数
@property (nonatomic) NSInteger duration;
/// 不可点击状态背景颜色
@property (nonatomic, strong) UIColor * _Nonnull disableColor;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIFont;

/// 选项卡
/// \code
/// let segmentedControl = MTSegmentedControl()
/// segmentedControl.allowChangeThumbWidth = false
/// segmentedControl.frame = CGRect(x: 50, y: 200, width: 100, height: 50)
/// segmentedControl.didSelectItemWith = { (index, title) -> () in
///     print("Selected item \(index)")
/// }
/// view.addSubview(segmentedControl)
///
/// \endcode
SWIFT_CLASS("_TtC9MTUIFlash18MTSegmentedControl")
@interface MTSegmentedControl : UIView
@property (nonatomic, strong) UIFont * _Nonnull defaultTextFont;
@property (nonatomic, strong) UIFont * _Nonnull selectedTextFont;
@property (nonatomic, strong) UIColor * _Nonnull defaultTextColor;
@property (nonatomic, strong) UIColor * _Nonnull selectedTextColor;
@property (nonatomic) BOOL useGradient;
@property (nonatomic, strong) UIColor * _Nonnull containerBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull thumbColor;
@property (nonatomic, copy) NSArray<UIColor *> * _Nullable thumbGradientColors;
@property (nonatomic, strong) UIColor * _Nonnull thumbShadowColor;
@property (nonatomic) BOOL useShadow;
@property (nonatomic) CGSize padding;
@property (nonatomic) CGFloat segCornerRadius;
/// awake from nib
- (void)awakeFromNib;
/// init with frame
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/// init
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// layout subviews
- (void)layoutSubviews;
@end




@interface MTSegmentedControl (SWIFT_EXTENSION(MTUIFlash))
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
@end








/// Walkthrough Page:
/// The walkthrough page represents any page added to the Walkthrough.
SWIFT_PROTOCOL("_TtP9MTUIFlash17MTWalkthroughPage_")
@protocol MTWalkthroughPage
/// While sliding to the “next” slide (from right to left), the “current” slide changes its offset from 1.0 to 2.0 while the “next” slide changes it from 0.0 to 1.0
/// While sliding to the “previous” slide (left to right), the current slide changes its offset from 1.0 to 0.0 while the “previous” slide changes it from 2.0 to 1.0
/// The other pages update their offsets whith values like 2.0, 3.0, -2.0… depending on their positions and on the status of the walkthrough
/// This value can be used on the previous, current and next page to perform custom animations on page’s subviews.
- (void)walkthroughDidScrollTo:(CGFloat)to offset:(CGFloat)offset;
@end


SWIFT_CLASS("_TtC9MTUIFlash31MTWalkthroughPageViewController")
@interface MTWalkthroughPageViewController : UIViewController <MTWalkthroughPage>
@property (nonatomic) CGPoint speed;
@property (nonatomic) CGPoint speedVariance;
@property (nonatomic, copy) NSString * _Nonnull animationType;
@property (nonatomic) BOOL animateAlpha;
@property (nonatomic, copy) NSString * _Nonnull staticTags;
- (void)viewDidLoad;
- (void)walkthroughDidScrollTo:(CGFloat)to offset:(CGFloat)offset;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIPageControl;
@class UITraitCollection;
@protocol UIViewControllerTransitionCoordinator;

/// //Get view controllers and build the walkthrough
/// let stb = UIStoryboard(name: “Walkthrough”, bundle: nil)
/// let walkthrough = stb.instantiateViewControllerWithIdentifier(“Master”) as BWWalkthroughViewController
/// let page_one = stb.instantiateViewControllerWithIdentifier(“page1”) as UIViewController
/// let page_two = stb.instantiateViewControllerWithIdentifier(“page2”) as UIViewController
/// let page_three = stb.instantiateViewControllerWithIdentifier(“page3”) as UIViewController
/// // Attach the pages to the master
/// walkthrough.delegate = self
/// walkthrough.add(viewController:page_one)
/// walkthrough.add(viewController:page_two)
/// walkthrough.add(viewController:page_three)
SWIFT_CLASS("_TtC9MTUIFlash27MTWalkthroughViewController")
@interface MTWalkthroughViewController : UIViewController <UIScrollViewDelegate>
@property (nonatomic, strong) IBOutlet UIPageControl * _Nullable pageControl;
@property (nonatomic, strong) IBOutlet UIButton * _Nullable nextButton;
@property (nonatomic, strong) IBOutlet UIButton * _Nullable prevButton;
@property (nonatomic, strong) IBOutlet UIButton * _Nullable closeButton;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (IBAction)nextPage;
- (IBAction)prevPage;
/// If you want to implement a “skip” button
/// connect the button to this IBAction and implement the delegate with the skipWalkthrough
- (IBAction)close:(id _Nonnull)sender;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)sv;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView * _Nonnull)scrollView;
- (void)willTransitionToTraitCollection:(UITraitCollection * _Nonnull)newCollection withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
@end


/// Walkthrough Delegate:
/// This delegate performs basic operations such as dismissing the Walkthrough or call whatever action on page change.
/// Probably the Walkthrough is presented by this delegate.
SWIFT_PROTOCOL("_TtP9MTUIFlash35MTWalkthroughViewControllerDelegate_")
@protocol MTWalkthroughViewControllerDelegate
@optional
- (void)walkthroughCloseButtonPressed;
- (void)walkthroughNextButtonPressed;
- (void)walkthroughPrevButtonPressed;
- (void)walkthroughPageDidChange:(NSInteger)pageNumber;
@end


/// 动画加载器
/// \code
///     let view      = UIView(frame: CGRect(x: 0, y: 0, width: 320, height: 568))
///     let indicator = MaterialLoadingIndicator(frame: CGRect(x: 0, y: 0, width: 50, height: 50))
///     indicator.center = CGPoint(x: 320*0.5, y: 568*0.5)
///     view.addSubview(indicator)
///     indicator.startAnimating()
///
/// \endcode
SWIFT_CLASS("_TtC9MTUIFlash24MaterialLoadingIndicator")
@interface MaterialLoadingIndicator : UIView
/// init with frame
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/// init with coder
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



/// 渐变颜色
typedef SWIFT_ENUM(NSInteger, PastelGradient, closed) {
  PastelGradientWarmFlame = 0,
  PastelGradientNightFade = 1,
  PastelGradientSpringWarmth = 2,
  PastelGradientJuicyPeach = 3,
  PastelGradientYoungPassion = 4,
  PastelGradientLadyLips = 5,
  PastelGradientSunnyMorning = 6,
  PastelGradientRainyAshville = 7,
  PastelGradientFrozenDreams = 8,
  PastelGradientWinterNeva = 9,
};


/// 渐变View动画
/// \code
/// let pastelView = PastelView(frame: view.bounds)
/// pastelView.startPastelPoint = .bottomLeft
/// pastelView.endPastelPoint = .topRight
/// pastelView.animationDuration = 3.0
/// pastelView.setColors([UIColor(red: 156/255, green: 39/255, blue: 176/255, alpha: 1.0),
///                  UIColor(red: 255/255, green: 64/255, blue: 129/255, alpha: 1.0),
///                  UIColor(red: 123/255, green: 31/255, blue: 162/255, alpha: 1.0),
///                  UIColor(red: 32/255, green: 76/255, blue: 255/255, alpha: 1.0),
///                  UIColor(red: 32/255, green: 158/255, blue: 255/255, alpha: 1.0),
///                  UIColor(red: 90/255, green: 120/255, blue: 127/255, alpha: 1.0),
///                  UIColor(red: 58/255, green: 255/255, blue: 217/255, alpha: 1.0)])
///
/// pastelView.startAnimation()
/// view.insertSubview(pastelView, at: 0)
///
/// \endcode
SWIFT_CLASS("_TtC9MTUIFlash10PastelView")
@interface PastelView : UIView
/// init with rect
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/// init
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
- (void)layoutSubviews;
/// remove from superview and remove animations
- (void)removeFromSuperview;
@end

typedef SWIFT_ENUM(NSInteger, PastelPoint, closed) {
  PastelPointLeft = 0,
  PastelPointTop = 1,
  PastelPointRight = 2,
  PastelPointBottom = 3,
  PastelPointTopLeft = 4,
  PastelPointTopRight = 5,
  PastelPointBottomLeft = 6,
  PastelPointBottomRight = 7,
};

@class CAAnimation;

@interface PastelView (SWIFT_EXTENSION(MTUIFlash)) <CAAnimationDelegate>
- (void)animationDidStop:(CAAnimation * _Nonnull)anim finished:(BOOL)flag;
@end


/// Pop a bubble view like Facebook app style
/// \code
///     @IBAction func tappedRightBarButton(sender: UIBarButtonItem) {
///         let startPoint = CGPoint(x: view.frame.width - 60, y: 55)
///         let aView = UIView(frame: CGRect(x: 0, y: 0, width: view.frame.width, height: 180))
///         let pop = PopBubble(options: nil, showHandler: nil, dismissHandler: nil)
///         pop.show(aView, point: startPoint)
///     }
///
/// \endcode
SWIFT_CLASS("_TtC9MTUIFlash9PopBubble")
@interface PopBubble : UIView
/// init
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// init
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// 关闭 pop
- (void)dismiss;
/// override draw
- (void)drawRect:(CGRect)rect;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UIImage;

SWIFT_CLASS("_TtC9MTUIFlash15ShadowImageView")
@interface ShadowImageView : UIView
/// Gaussian Blur radius, larger will make the back ground shadow lighter (warning: do not set it too large, 2 or 3 for most cases)
@property (nonatomic) CGFloat blurRadius;
/// The image view contains target image
@property (nonatomic, strong) UIImage * _Nullable image;
/// Image’s corner radius
@property (nonatomic) CGFloat imageCornerRaidus;
/// shadow radius offset in percentage, if you want shadow radius larger, set a postive number for this, if you want it be smaller, then set a negative number
@property (nonatomic) CGFloat shadowRadiusOffSetPercentage;
/// Shadow offset value on x axis, postive -> right, negative -> left
@property (nonatomic) CGFloat shadowOffSetByX;
/// Shadow offset value on y axis, postive -> right, negative -> left
@property (nonatomic) CGFloat shadowOffSetByY;
/// Shadow alpha value
@property (nonatomic) CGFloat shadowAlpha;
@property (nonatomic) UIViewContentMode contentMode;
- (void)layoutSubviews;
/// override will move to superview
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9MTUIFlash6Slider")
@interface Slider : UISlider
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface Slider (SWIFT_EXTENSION(MTUIFlash))
- (void)tintColorDidChange;
@end


/// Page Control
/// \code
///   func scrollViewDidScroll(_ scrollView: UIScrollView) {
///       let page = scrollView.contentOffset.x / scrollView.bounds.width
///       let progressInPage = scrollView.contentOffset.x - (page * scrollView.bounds.width)
///       let progress = CGFloat(page) + progressInPage
///       snakePageControl.progress = progress
///   }
///
/// \endcode
SWIFT_CLASS("_TtC9MTUIFlash16SnakePageControl")
@interface SnakePageControl : UIView
@property (nonatomic) NSInteger pageCount;
@property (nonatomic) CGFloat progress;
@property (nonatomic, strong) UIColor * _Nonnull activeTint;
@property (nonatomic, strong) UIColor * _Nonnull inactiveTint;
@property (nonatomic) CGFloat indicatorPadding;
@property (nonatomic) CGFloat indicatorRadius;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (CGSize)sizeThatFits:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// 文本输入框
/// \code
///    let textField = TextField(frame: CGRect(x: 50, y: 50, width: 200, height: 50))
///    textField.borderStyle = .roundedRect
///    view.addSubview(textField)
///    textField.allowedActions = [.copy, .cut]
///    //textField.notAllowedActions = [.copy, .cut]
///
/// \endcode
SWIFT_CLASS("_TtC9MTUIFlash9TextField")
@interface TextField : UITextField
/// override canPerformAction
- (BOOL)canPerformAction:(SEL _Nonnull)action withSender:(id _Nullable)sender SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end























#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
